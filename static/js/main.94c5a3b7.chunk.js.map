{"version":3,"sources":["Components/weatherCard.jsx","Components/cards.jsx","Components/header.jsx","App.js","reportWebVitals.js","index.js"],"names":["WeatherCard","weekDay","month","day","degree","description","icon","className","src","alt","allweekDay","allMonth","Cards","state","cards","i","fetch","then","result","json","list","weather","main","push","setState","nextDays","moment","add","nextDaysWeek","this","getNextDays","nextDay","map","card","get","temp","Component","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAaeA,EAXK,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,YAAaC,EAAS,EAATA,KAC5D,OACI,sBAAKC,UAAU,OAAf,UACI,6BAAKN,IACL,mBAAGM,UAAU,OAAb,mBAAwBL,EAAxB,YAAiCC,KACjC,qBAAKI,UAAU,OAAf,SAAsB,qBAAKC,IAAG,4CAAuCF,EAAvC,WAAsDG,IAAI,OACxF,mBAAGF,UAAU,SAAb,SAAuBH,IACvB,4BAAIC,Q,gBCJVK,EAAW,CAAC,UAAU,QAAQ,QAAQ,WAAW,QAAQ,WAAW,UACpEC,EAAS,CAAC,MAAM,MAAM,OAAO,MAAM,MAAM,OAAO,UAAU,OAAO,OAAO,MAAM,MAAM,OAyD3EC,E,4MAvDXC,MAAQ,CACJC,MAAM,I,uDAGV,WAAoB,IAAD,OACXA,EAAQ,GACRC,EAAE,EACNC,MAXS,uGAWOC,MAAK,SAAAC,GAAM,OAAIA,EAAOC,UAAQF,MAAK,SAAAC,GAC/C,IAAIH,EAAE,EAAEA,EAAE,EAAEA,IAAI,CACZ,MAAwBG,EAAOE,KAAKL,GAA5BM,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KACjBR,EAAMS,KAAK,CAACF,UAAQC,SAExB,EAAKE,SAAS,CAACV,MAAMA,S,yBAI7B,WACI,IAAMW,EAAW,CACbC,MACAA,MAASC,IAAI,EAAE,KACfD,MAASC,IAAI,EAAE,KACfD,MAASC,IAAI,EAAE,KACfD,MAASC,IAAI,EAAE,MAUnB,MAAO,CAPc,CACjBjB,EAAWe,EAAS,GAAGtB,OACvBO,EAAWe,EAAS,GAAGtB,OACvBO,EAAWe,EAAS,GAAGtB,OACvBO,EAAWe,EAAS,GAAGtB,OACvBO,EAAWe,EAAS,GAAGtB,QAENsB,K,oBAGzB,WACI,IAAMG,EAAeC,KAAKC,cAAc,GAClCC,EAAUF,KAAKC,cAAc,GACnC,OACI,qBAAKvB,UAAU,cAAf,SAEQsB,KAAKhB,MAAMC,MAAMkB,KAAI,SAACC,EAAKlB,GAAN,OAAY,cAAC,EAAD,CACGd,QAAS2B,EAAab,GACtBb,MAAOS,EAASoB,EAAQhB,GAAGmB,IAAI,UAC/B/B,IAAK4B,EAAQhB,GAAGmB,IAAI,QACpB9B,OAAQ6B,EAAKX,KAAKa,KAClB9B,YAAa4B,EAAKZ,QAAQ,GAAGhB,YAC7BC,KAAM2B,EAAKZ,QAAQ,GAAGf,MANPS,Y,GA1CnDqB,aCIJC,E,4JARZ,WACI,OACI,qBAAK9B,UAAU,SAAf,SACI,uD,GAJK6B,aCaNE,G,kKATX,WACI,OACI,sBAAK/B,UAAU,YAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GALE6B,cCOHG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.94c5a3b7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst WeatherCard = ({weekDay, month, day, degree, description, icon}) =>{\r\n    return(\r\n        <div className=\"card\">\r\n            <h3>{weekDay}</h3>\r\n            <p className=\"date\">{`${month} ${day}`}</p>\r\n            <div className=\"icon\"><img src={`https://openweathermap.org/img/wn/${icon}@2x.png`} alt=\"\" /></div>\r\n            <p className=\"degree\">{degree}</p>\r\n            <p>{description}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default WeatherCard;","import React,{ Component } from \"react\";\r\nimport WeatherCard from \"./weatherCard\";\r\nimport moment from \"moment\";\r\n\r\nconst endPoint = 'https://api.openweathermap.org/data/2.5/forecast?q=marrakech&appid=3518ad82ca06ca13a7b7b9a218d61c51'\r\nconst allweekDay=['dimanch','lundi','mardi','mercredi','jeudi','vendredi','samedi'];\r\nconst allMonth=['jan','fev','mars','apr','may','juin','juillet','aout','sept','oct','nov','dec']\r\nclass Cards extends Component{\r\n    state = {\r\n        cards:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        var cards = [];\r\n        var i=0;\r\n        fetch(endPoint).then(result => result.json()).then(result=> {\r\n            for(i=0;i<5;i++){\r\n                const { weather, main }=result.list[i]\r\n                cards.push({weather,main})\r\n            } \r\n            this.setState({cards:cards});\r\n        })\r\n    }\r\n\r\n    getNextDays(){\r\n        const nextDays = [\r\n            moment(),\r\n            moment().add(1,'d'),\r\n            moment().add(2,'d'),\r\n            moment().add(3,'d'),\r\n            moment().add(4,'d')\r\n        ]\r\n\r\n        const NextDaysWeek = [\r\n            allweekDay[nextDays[0].day()],\r\n            allweekDay[nextDays[1].day()],\r\n            allweekDay[nextDays[2].day()],\r\n            allweekDay[nextDays[3].day()],\r\n            allweekDay[nextDays[4].day()]\r\n        ]\r\n        return [NextDaysWeek,nextDays];\r\n\r\n    }\r\n    render(){\r\n        const nextDaysWeek = this.getNextDays()[0];\r\n        const nextDay = this.getNextDays()[1];\r\n        return(\r\n            <div className=\"cardsHolder\">\r\n                {\r\n                    this.state.cards.map((card,i) => <WeatherCard key={i} \r\n                                                        weekDay={nextDaysWeek[i]}\r\n                                                        month={allMonth[nextDay[i].get('month')]}\r\n                                                        day={nextDay[i].get('date')}\r\n                                                        degree={card.main.temp}  \r\n                                                        description={card.weather[0].description}\r\n                                                        icon={card.weather[0].icon} />)\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Cards;","import React, { Component } from 'react'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className='header'>\r\n                <h1>5 days ForeCast</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default  Header;","import React,{ Component } from \"react\";\nimport Cards from './Components/cards';\nimport Header from './Components/header';\nimport './main.css';\n\nclass App extends Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <Header/>\n                <Cards />\n            </div>\n        );\n    }\n}\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}